import java.util.ArrayList;
import java.util.Scanner;

// Contact class to store individual contact details
class Contact {
    String name;
    String phone;
    String email;

    Contact(String name, String phone, String email) {
        this.name = name;
        this.phone = phone;
        this.email = email;
    }
}

// Main class containing the program logic and main method
public class ContactManagementSystem {

    static ArrayList<Contact> contacts = new ArrayList<>();
    static Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) {
        int choice;

        do {
            System.out.println("\n====== Contact Management System ======");
            System.out.println("1. Add Contact");
            System.out.println("2. View All Contacts");
            System.out.println("3. Update Contact (by Name or Phone)");
            System.out.println("4. Delete Contact");
            System.out.println("5. Exit");
            System.out.print("Enter your choice: ");
            choice = scanner.nextInt();
            scanner.nextLine(); // consume newline

            switch (choice) {
                case 1:
                    addContact();
                    break;
                case 2:
                    viewContacts();
                    break;
                case 3:
                    updateContact();
                    break;
                case 4:
                    deleteContact();
                    break;
                case 5:
                    System.out.println("Exiting... Thank you!");
                    break;
                default:
                    System.out.println("Invalid choice. Please try again.");
            }

        } while (choice != 5);
    }

    static void addContact() {
        System.out.print("Enter Name: ");
        String name = scanner.nextLine();
        System.out.print("Enter Phone Number: ");
        String phone = scanner.nextLine();
        System.out.print("Enter Email: ");
        String email = scanner.nextLine();

        contacts.add(new Contact(name, phone, email));
        System.out.println("Contact added successfully.");
    }

    static void viewContacts() {
        if (contacts.isEmpty()) {
            System.out.println("No contacts to display.");
            return;
        }

        System.out.println("\n--- Contact List ---");
        for (int i = 0; i < contacts.size(); i++) {
            Contact c = contacts.get(i);
            System.out.println((i + 1) + ". Name: " + c.name + ", Phone: " + c.phone + ", Email: " + c.email);
        }
    }

    // Update contact by searching with Name or Phone Number
    static void updateContact() {
        if (contacts.isEmpty()) {
            System.out.println("No contacts to update.");
            return;
        }

        System.out.print("Enter the Name or Phone Number of the contact to update: ");
        String search = scanner.nextLine();

        Contact foundContact = null;
        for (Contact c : contacts) {
            if (c.name.equalsIgnoreCase(search) || c.phone.equals(search)) {
                foundContact = c;
                break;
            }
        }

        if (foundContact == null) {
            System.out.println("No contact found with that Name or Phone Number.");
            return;
        }

        System.out.println("Found contact:");
        System.out.println("Name: " + foundContact.name + ", Phone: " + foundContact.phone + ", Email: " + foundContact.email);

        System.out.print("Enter new name (leave blank to keep \"" + foundContact.name + "\"): ");
        String name = scanner.nextLine();
        System.out.print("Enter new phone (leave blank to keep \"" + foundContact.phone + "\"): ");
        String phone = scanner.nextLine();
        System.out.print("Enter new email (leave blank to keep \"" + foundContact.email + "\"): ");
        String email = scanner.nextLine();

        if (!name.isEmpty()) foundContact.name = name;
        if (!phone.isEmpty()) foundContact.phone = phone;
        if (!email.isEmpty()) foundContact.email = email;

        System.out.println("Contact updated successfully.");
    }

    static void deleteContact() {
        if (contacts.isEmpty()) {
            System.out.println("No contacts to delete.");
            return;
        }

        System.out.print("Enter the contact number to delete: ");
        viewContacts();

        int index = scanner.nextInt();
        scanner.nextLine();

        if (index < 1 || index > contacts.size()) {
            System.out.println("Invalid contact number.");
            return;
        }

        contacts.remove(index - 1);
        System.out.println("Contact deleted successfully.");
    }
}
